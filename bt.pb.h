// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: external/aic/btd/bt.proto

#ifndef PROTOBUF_external_2faic_2fbtd_2fbt_2eproto__INCLUDED
#define PROTOBUF_external_2faic_2fbtd_2fbt_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2003000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2003000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_message_reflection.h>
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_external_2faic_2fbtd_2fbt_2eproto();
void protobuf_AssignDesc_external_2faic_2fbtd_2fbt_2eproto();
void protobuf_ShutdownFile_external_2faic_2fbtd_2fbt_2eproto();

class btPayload;
class btPayload_BtifPayload;
class btPayload_BtePayload;

enum btPayload_BtifPayload_cmdTypeBtif {
  btPayload_BtifPayload_cmdTypeBtif_INIT = 0,
  btPayload_BtifPayload_cmdTypeBtif_ENABLE = 1,
  btPayload_BtifPayload_cmdTypeBtif_DISABLE = 2,
  btPayload_BtifPayload_cmdTypeBtif_CLEANUP = 3,
  btPayload_BtifPayload_cmdTypeBtif_GET_ADAPTER_PROPERTIES = 4,
  btPayload_BtifPayload_cmdTypeBtif_GET_ADAPTER_PROPERTY = 5,
  btPayload_BtifPayload_cmdTypeBtif_SET_ADAPTER_PROPERTY = 6,
  btPayload_BtifPayload_cmdTypeBtif_GET_REMOTE_DEVICE_PROPERTIES = 7,
  btPayload_BtifPayload_cmdTypeBtif_GET_REMOTE_DEVICE_PROPERTY = 8,
  btPayload_BtifPayload_cmdTypeBtif_SET_REMOTE_DEVICE_PROPERTY = 9,
  btPayload_BtifPayload_cmdTypeBtif_GET_REMOTE_SERVICE_RECORD = 10,
  btPayload_BtifPayload_cmdTypeBtif_GET_REMOTE_SERVICES = 11,
  btPayload_BtifPayload_cmdTypeBtif_START_DISCOVERY = 12,
  btPayload_BtifPayload_cmdTypeBtif_CANCEL_DISCOVERY = 13,
  btPayload_BtifPayload_cmdTypeBtif_CREATE_BOND = 14,
  btPayload_BtifPayload_cmdTypeBtif_REMOVE_BOND = 15,
  btPayload_BtifPayload_cmdTypeBtif_CANCEL_BOND = 16,
  btPayload_BtifPayload_cmdTypeBtif_PIN_REPLY = 17,
  btPayload_BtifPayload_cmdTypeBtif_SSP_REPLY = 18,
  btPayload_BtifPayload_cmdTypeBtif_GET_PROFILE_INTERFACE = 19,
  btPayload_BtifPayload_cmdTypeBtif_DUT_MODE_CONFIGURE = 20,
  btPayload_BtifPayload_cmdTypeBtif_DUT_MODE_SEND = 21,
  btPayload_BtifPayload_cmdTypeBtif_LE_TEST_MODE = 22,
  btPayload_BtifPayload_cmdTypeBtif_CONFIG_HCI_SNOOP_LOG = 23,
  btPayload_BtifPayload_cmdTypeBtif_SET_ADAPTER_PROPERTY_BDNAME = 24,
  btPayload_BtifPayload_cmdTypeBtif_SET_ADAPTER_PROPERTY_SCAN_MODE_NONE = 25,
  btPayload_BtifPayload_cmdTypeBtif_SET_ADAPTER_PROPERTY_SCAN_MODE_CONNECTABLE = 26,
  btPayload_BtifPayload_cmdTypeBtif_SET_ADAPTER_PROPERTY_SCAN_MODE_CONNECTABLE_DISCOVERABLE = 27,
  btPayload_BtifPayload_cmdTypeBtif_SET_ADAPTER_PROPERTY_DISCOVERY_TIMEOUT_2M = 28,
  btPayload_BtifPayload_cmdTypeBtif_SET_ADAPTER_PROPERTY_DISCOVERY_TIMEOUT_5M = 29,
  btPayload_BtifPayload_cmdTypeBtif_SET_ADAPTER_PROPERTY_DISCOVERY_TIMEOUT_1H = 30,
  btPayload_BtifPayload_cmdTypeBtif_SET_ADAPTER_PROPERTY_DISCOVERY_TIMEOUT_NE = 31
};
bool btPayload_BtifPayload_cmdTypeBtif_IsValid(int value);
const btPayload_BtifPayload_cmdTypeBtif btPayload_BtifPayload_cmdTypeBtif_cmdTypeBtif_MIN = btPayload_BtifPayload_cmdTypeBtif_INIT;
const btPayload_BtifPayload_cmdTypeBtif btPayload_BtifPayload_cmdTypeBtif_cmdTypeBtif_MAX = btPayload_BtifPayload_cmdTypeBtif_SET_ADAPTER_PROPERTY_DISCOVERY_TIMEOUT_NE;
const int btPayload_BtifPayload_cmdTypeBtif_cmdTypeBtif_ARRAYSIZE = btPayload_BtifPayload_cmdTypeBtif_cmdTypeBtif_MAX + 1;

const ::google::protobuf::EnumDescriptor* btPayload_BtifPayload_cmdTypeBtif_descriptor();
inline const ::std::string& btPayload_BtifPayload_cmdTypeBtif_Name(btPayload_BtifPayload_cmdTypeBtif value) {
  return ::google::protobuf::internal::NameOfEnum(
    btPayload_BtifPayload_cmdTypeBtif_descriptor(), value);
}
inline bool btPayload_BtifPayload_cmdTypeBtif_Parse(
    const ::std::string& name, btPayload_BtifPayload_cmdTypeBtif* value) {
  return ::google::protobuf::internal::ParseNamedEnum<btPayload_BtifPayload_cmdTypeBtif>(
    btPayload_BtifPayload_cmdTypeBtif_descriptor(), name, value);
}
enum btPayload_BtePayload_cmdTypeBte {
  btPayload_BtePayload_cmdTypeBte_INQ_RES = 100,
  btPayload_BtePayload_cmdTypeBte_BOND_STATE = 101,
  btPayload_BtePayload_cmdTypeBte_DISC_RES = 102
};
bool btPayload_BtePayload_cmdTypeBte_IsValid(int value);
const btPayload_BtePayload_cmdTypeBte btPayload_BtePayload_cmdTypeBte_cmdTypeBte_MIN = btPayload_BtePayload_cmdTypeBte_INQ_RES;
const btPayload_BtePayload_cmdTypeBte btPayload_BtePayload_cmdTypeBte_cmdTypeBte_MAX = btPayload_BtePayload_cmdTypeBte_DISC_RES;
const int btPayload_BtePayload_cmdTypeBte_cmdTypeBte_ARRAYSIZE = btPayload_BtePayload_cmdTypeBte_cmdTypeBte_MAX + 1;

const ::google::protobuf::EnumDescriptor* btPayload_BtePayload_cmdTypeBte_descriptor();
inline const ::std::string& btPayload_BtePayload_cmdTypeBte_Name(btPayload_BtePayload_cmdTypeBte value) {
  return ::google::protobuf::internal::NameOfEnum(
    btPayload_BtePayload_cmdTypeBte_descriptor(), value);
}
inline bool btPayload_BtePayload_cmdTypeBte_Parse(
    const ::std::string& name, btPayload_BtePayload_cmdTypeBte* value) {
  return ::google::protobuf::internal::ParseNamedEnum<btPayload_BtePayload_cmdTypeBte>(
    btPayload_BtePayload_cmdTypeBte_descriptor(), name, value);
}
// ===================================================================

class btPayload_BtifPayload : public ::google::protobuf::Message {
 public:
  btPayload_BtifPayload();
  virtual ~btPayload_BtifPayload();
  
  btPayload_BtifPayload(const btPayload_BtifPayload& from);
  
  inline btPayload_BtifPayload& operator=(const btPayload_BtifPayload& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const btPayload_BtifPayload& default_instance();
  
  void Swap(btPayload_BtifPayload* other);
  
  // implements Message ----------------------------------------------
  
  btPayload_BtifPayload* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const btPayload_BtifPayload& from);
  void MergeFrom(const btPayload_BtifPayload& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  typedef btPayload_BtifPayload_cmdTypeBtif cmdTypeBtif;
  static const cmdTypeBtif INIT = btPayload_BtifPayload_cmdTypeBtif_INIT;
  static const cmdTypeBtif ENABLE = btPayload_BtifPayload_cmdTypeBtif_ENABLE;
  static const cmdTypeBtif DISABLE = btPayload_BtifPayload_cmdTypeBtif_DISABLE;
  static const cmdTypeBtif CLEANUP = btPayload_BtifPayload_cmdTypeBtif_CLEANUP;
  static const cmdTypeBtif GET_ADAPTER_PROPERTIES = btPayload_BtifPayload_cmdTypeBtif_GET_ADAPTER_PROPERTIES;
  static const cmdTypeBtif GET_ADAPTER_PROPERTY = btPayload_BtifPayload_cmdTypeBtif_GET_ADAPTER_PROPERTY;
  static const cmdTypeBtif SET_ADAPTER_PROPERTY = btPayload_BtifPayload_cmdTypeBtif_SET_ADAPTER_PROPERTY;
  static const cmdTypeBtif GET_REMOTE_DEVICE_PROPERTIES = btPayload_BtifPayload_cmdTypeBtif_GET_REMOTE_DEVICE_PROPERTIES;
  static const cmdTypeBtif GET_REMOTE_DEVICE_PROPERTY = btPayload_BtifPayload_cmdTypeBtif_GET_REMOTE_DEVICE_PROPERTY;
  static const cmdTypeBtif SET_REMOTE_DEVICE_PROPERTY = btPayload_BtifPayload_cmdTypeBtif_SET_REMOTE_DEVICE_PROPERTY;
  static const cmdTypeBtif GET_REMOTE_SERVICE_RECORD = btPayload_BtifPayload_cmdTypeBtif_GET_REMOTE_SERVICE_RECORD;
  static const cmdTypeBtif GET_REMOTE_SERVICES = btPayload_BtifPayload_cmdTypeBtif_GET_REMOTE_SERVICES;
  static const cmdTypeBtif START_DISCOVERY = btPayload_BtifPayload_cmdTypeBtif_START_DISCOVERY;
  static const cmdTypeBtif CANCEL_DISCOVERY = btPayload_BtifPayload_cmdTypeBtif_CANCEL_DISCOVERY;
  static const cmdTypeBtif CREATE_BOND = btPayload_BtifPayload_cmdTypeBtif_CREATE_BOND;
  static const cmdTypeBtif REMOVE_BOND = btPayload_BtifPayload_cmdTypeBtif_REMOVE_BOND;
  static const cmdTypeBtif CANCEL_BOND = btPayload_BtifPayload_cmdTypeBtif_CANCEL_BOND;
  static const cmdTypeBtif PIN_REPLY = btPayload_BtifPayload_cmdTypeBtif_PIN_REPLY;
  static const cmdTypeBtif SSP_REPLY = btPayload_BtifPayload_cmdTypeBtif_SSP_REPLY;
  static const cmdTypeBtif GET_PROFILE_INTERFACE = btPayload_BtifPayload_cmdTypeBtif_GET_PROFILE_INTERFACE;
  static const cmdTypeBtif DUT_MODE_CONFIGURE = btPayload_BtifPayload_cmdTypeBtif_DUT_MODE_CONFIGURE;
  static const cmdTypeBtif DUT_MODE_SEND = btPayload_BtifPayload_cmdTypeBtif_DUT_MODE_SEND;
  static const cmdTypeBtif LE_TEST_MODE = btPayload_BtifPayload_cmdTypeBtif_LE_TEST_MODE;
  static const cmdTypeBtif CONFIG_HCI_SNOOP_LOG = btPayload_BtifPayload_cmdTypeBtif_CONFIG_HCI_SNOOP_LOG;
  static const cmdTypeBtif SET_ADAPTER_PROPERTY_BDNAME = btPayload_BtifPayload_cmdTypeBtif_SET_ADAPTER_PROPERTY_BDNAME;
  static const cmdTypeBtif SET_ADAPTER_PROPERTY_SCAN_MODE_NONE = btPayload_BtifPayload_cmdTypeBtif_SET_ADAPTER_PROPERTY_SCAN_MODE_NONE;
  static const cmdTypeBtif SET_ADAPTER_PROPERTY_SCAN_MODE_CONNECTABLE = btPayload_BtifPayload_cmdTypeBtif_SET_ADAPTER_PROPERTY_SCAN_MODE_CONNECTABLE;
  static const cmdTypeBtif SET_ADAPTER_PROPERTY_SCAN_MODE_CONNECTABLE_DISCOVERABLE = btPayload_BtifPayload_cmdTypeBtif_SET_ADAPTER_PROPERTY_SCAN_MODE_CONNECTABLE_DISCOVERABLE;
  static const cmdTypeBtif SET_ADAPTER_PROPERTY_DISCOVERY_TIMEOUT_2M = btPayload_BtifPayload_cmdTypeBtif_SET_ADAPTER_PROPERTY_DISCOVERY_TIMEOUT_2M;
  static const cmdTypeBtif SET_ADAPTER_PROPERTY_DISCOVERY_TIMEOUT_5M = btPayload_BtifPayload_cmdTypeBtif_SET_ADAPTER_PROPERTY_DISCOVERY_TIMEOUT_5M;
  static const cmdTypeBtif SET_ADAPTER_PROPERTY_DISCOVERY_TIMEOUT_1H = btPayload_BtifPayload_cmdTypeBtif_SET_ADAPTER_PROPERTY_DISCOVERY_TIMEOUT_1H;
  static const cmdTypeBtif SET_ADAPTER_PROPERTY_DISCOVERY_TIMEOUT_NE = btPayload_BtifPayload_cmdTypeBtif_SET_ADAPTER_PROPERTY_DISCOVERY_TIMEOUT_NE;
  static inline bool cmdTypeBtif_IsValid(int value) {
    return btPayload_BtifPayload_cmdTypeBtif_IsValid(value);
  }
  static const cmdTypeBtif cmdTypeBtif_MIN =
    btPayload_BtifPayload_cmdTypeBtif_cmdTypeBtif_MIN;
  static const cmdTypeBtif cmdTypeBtif_MAX =
    btPayload_BtifPayload_cmdTypeBtif_cmdTypeBtif_MAX;
  static const int cmdTypeBtif_ARRAYSIZE =
    btPayload_BtifPayload_cmdTypeBtif_cmdTypeBtif_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  cmdTypeBtif_descriptor() {
    return btPayload_BtifPayload_cmdTypeBtif_descriptor();
  }
  static inline const ::std::string& cmdTypeBtif_Name(cmdTypeBtif value) {
    return btPayload_BtifPayload_cmdTypeBtif_Name(value);
  }
  static inline bool cmdTypeBtif_Parse(const ::std::string& name,
      cmdTypeBtif* value) {
    return btPayload_BtifPayload_cmdTypeBtif_Parse(name, value);
  }
  
  // accessors -------------------------------------------------------
  
  // optional .btPayload.BtifPayload.cmdTypeBtif cmd = 4 [default = INIT];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 4;
  inline ::btPayload_BtifPayload_cmdTypeBtif cmd() const;
  inline void set_cmd(::btPayload_BtifPayload_cmdTypeBtif value);
  
  // @@protoc_insertion_point(class_scope:btPayload.BtifPayload)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  int cmd_;
  friend void  protobuf_AddDesc_external_2faic_2fbtd_2fbt_2eproto();
  friend void protobuf_AssignDesc_external_2faic_2fbtd_2fbt_2eproto();
  friend void protobuf_ShutdownFile_external_2faic_2fbtd_2fbt_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static btPayload_BtifPayload* default_instance_;
};
// -------------------------------------------------------------------

class btPayload_BtePayload : public ::google::protobuf::Message {
 public:
  btPayload_BtePayload();
  virtual ~btPayload_BtePayload();
  
  btPayload_BtePayload(const btPayload_BtePayload& from);
  
  inline btPayload_BtePayload& operator=(const btPayload_BtePayload& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const btPayload_BtePayload& default_instance();
  
  void Swap(btPayload_BtePayload* other);
  
  // implements Message ----------------------------------------------
  
  btPayload_BtePayload* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const btPayload_BtePayload& from);
  void MergeFrom(const btPayload_BtePayload& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  typedef btPayload_BtePayload_cmdTypeBte cmdTypeBte;
  static const cmdTypeBte INQ_RES = btPayload_BtePayload_cmdTypeBte_INQ_RES;
  static const cmdTypeBte BOND_STATE = btPayload_BtePayload_cmdTypeBte_BOND_STATE;
  static const cmdTypeBte DISC_RES = btPayload_BtePayload_cmdTypeBte_DISC_RES;
  static inline bool cmdTypeBte_IsValid(int value) {
    return btPayload_BtePayload_cmdTypeBte_IsValid(value);
  }
  static const cmdTypeBte cmdTypeBte_MIN =
    btPayload_BtePayload_cmdTypeBte_cmdTypeBte_MIN;
  static const cmdTypeBte cmdTypeBte_MAX =
    btPayload_BtePayload_cmdTypeBte_cmdTypeBte_MAX;
  static const int cmdTypeBte_ARRAYSIZE =
    btPayload_BtePayload_cmdTypeBte_cmdTypeBte_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  cmdTypeBte_descriptor() {
    return btPayload_BtePayload_cmdTypeBte_descriptor();
  }
  static inline const ::std::string& cmdTypeBte_Name(cmdTypeBte value) {
    return btPayload_BtePayload_cmdTypeBte_Name(value);
  }
  static inline bool cmdTypeBte_Parse(const ::std::string& name,
      cmdTypeBte* value) {
    return btPayload_BtePayload_cmdTypeBte_Parse(name, value);
  }
  
  // accessors -------------------------------------------------------
  
  // optional .btPayload.BtePayload.cmdTypeBte cmd = 6 [default = INQ_RES];
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 6;
  inline ::btPayload_BtePayload_cmdTypeBte cmd() const;
  inline void set_cmd(::btPayload_BtePayload_cmdTypeBte value);
  
  // @@protoc_insertion_point(class_scope:btPayload.BtePayload)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  int cmd_;
  friend void  protobuf_AddDesc_external_2faic_2fbtd_2fbt_2eproto();
  friend void protobuf_AssignDesc_external_2faic_2fbtd_2fbt_2eproto();
  friend void protobuf_ShutdownFile_external_2faic_2fbtd_2fbt_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static btPayload_BtePayload* default_instance_;
};
// -------------------------------------------------------------------

class btPayload : public ::google::protobuf::Message {
 public:
  btPayload();
  virtual ~btPayload();
  
  btPayload(const btPayload& from);
  
  inline btPayload& operator=(const btPayload& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const btPayload& default_instance();
  
  void Swap(btPayload* other);
  
  // implements Message ----------------------------------------------
  
  btPayload* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const btPayload& from);
  void MergeFrom(const btPayload& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  typedef btPayload_BtifPayload BtifPayload;
  typedef btPayload_BtePayload BtePayload;
  
  // accessors -------------------------------------------------------
  
  // optional string addr = 1;
  inline bool has_addr() const;
  inline void clear_addr();
  static const int kAddrFieldNumber = 1;
  inline const ::std::string& addr() const;
  inline void set_addr(const ::std::string& value);
  inline void set_addr(const char* value);
  inline void set_addr(const char* value, size_t size);
  inline ::std::string* mutable_addr();
  
  // optional string name = 2;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 2;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  
  // optional .btPayload.BtifPayload btif = 3;
  inline bool has_btif() const;
  inline void clear_btif();
  static const int kBtifFieldNumber = 3;
  inline const ::btPayload_BtifPayload& btif() const;
  inline ::btPayload_BtifPayload* mutable_btif();
  
  // optional .btPayload.BtePayload bte = 5;
  inline bool has_bte() const;
  inline void clear_bte();
  static const int kBteFieldNumber = 5;
  inline const ::btPayload_BtePayload& bte() const;
  inline ::btPayload_BtePayload* mutable_bte();
  
  // @@protoc_insertion_point(class_scope:btPayload)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::std::string* addr_;
  static const ::std::string _default_addr_;
  ::std::string* name_;
  static const ::std::string _default_name_;
  ::btPayload_BtifPayload* btif_;
  ::btPayload_BtePayload* bte_;
  friend void  protobuf_AddDesc_external_2faic_2fbtd_2fbt_2eproto();
  friend void protobuf_AssignDesc_external_2faic_2fbtd_2fbt_2eproto();
  friend void protobuf_ShutdownFile_external_2faic_2fbtd_2fbt_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static btPayload* default_instance_;
};
// ===================================================================


// ===================================================================

// btPayload_BtifPayload

// optional .btPayload.BtifPayload.cmdTypeBtif cmd = 4 [default = INIT];
inline bool btPayload_BtifPayload::has_cmd() const {
  return _has_bit(0);
}
inline void btPayload_BtifPayload::clear_cmd() {
  cmd_ = 0;
  _clear_bit(0);
}
inline ::btPayload_BtifPayload_cmdTypeBtif btPayload_BtifPayload::cmd() const {
  return static_cast< ::btPayload_BtifPayload_cmdTypeBtif >(cmd_);
}
inline void btPayload_BtifPayload::set_cmd(::btPayload_BtifPayload_cmdTypeBtif value) {
  GOOGLE_DCHECK(::btPayload_BtifPayload_cmdTypeBtif_IsValid(value));
  _set_bit(0);
  cmd_ = value;
}

// -------------------------------------------------------------------

// btPayload_BtePayload

// optional .btPayload.BtePayload.cmdTypeBte cmd = 6 [default = INQ_RES];
inline bool btPayload_BtePayload::has_cmd() const {
  return _has_bit(0);
}
inline void btPayload_BtePayload::clear_cmd() {
  cmd_ = 100;
  _clear_bit(0);
}
inline ::btPayload_BtePayload_cmdTypeBte btPayload_BtePayload::cmd() const {
  return static_cast< ::btPayload_BtePayload_cmdTypeBte >(cmd_);
}
inline void btPayload_BtePayload::set_cmd(::btPayload_BtePayload_cmdTypeBte value) {
  GOOGLE_DCHECK(::btPayload_BtePayload_cmdTypeBte_IsValid(value));
  _set_bit(0);
  cmd_ = value;
}

// -------------------------------------------------------------------

// btPayload

// optional string addr = 1;
inline bool btPayload::has_addr() const {
  return _has_bit(0);
}
inline void btPayload::clear_addr() {
  if (addr_ != &_default_addr_) {
    addr_->clear();
  }
  _clear_bit(0);
}
inline const ::std::string& btPayload::addr() const {
  return *addr_;
}
inline void btPayload::set_addr(const ::std::string& value) {
  _set_bit(0);
  if (addr_ == &_default_addr_) {
    addr_ = new ::std::string;
  }
  addr_->assign(value);
}
inline void btPayload::set_addr(const char* value) {
  _set_bit(0);
  if (addr_ == &_default_addr_) {
    addr_ = new ::std::string;
  }
  addr_->assign(value);
}
inline void btPayload::set_addr(const char* value, size_t size) {
  _set_bit(0);
  if (addr_ == &_default_addr_) {
    addr_ = new ::std::string;
  }
  addr_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* btPayload::mutable_addr() {
  _set_bit(0);
  if (addr_ == &_default_addr_) {
    addr_ = new ::std::string;
  }
  return addr_;
}

// optional string name = 2;
inline bool btPayload::has_name() const {
  return _has_bit(1);
}
inline void btPayload::clear_name() {
  if (name_ != &_default_name_) {
    name_->clear();
  }
  _clear_bit(1);
}
inline const ::std::string& btPayload::name() const {
  return *name_;
}
inline void btPayload::set_name(const ::std::string& value) {
  _set_bit(1);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void btPayload::set_name(const char* value) {
  _set_bit(1);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void btPayload::set_name(const char* value, size_t size) {
  _set_bit(1);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* btPayload::mutable_name() {
  _set_bit(1);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  return name_;
}

// optional .btPayload.BtifPayload btif = 3;
inline bool btPayload::has_btif() const {
  return _has_bit(2);
}
inline void btPayload::clear_btif() {
  if (btif_ != NULL) btif_->::btPayload_BtifPayload::Clear();
  _clear_bit(2);
}
inline const ::btPayload_BtifPayload& btPayload::btif() const {
  return btif_ != NULL ? *btif_ : *default_instance_->btif_;
}
inline ::btPayload_BtifPayload* btPayload::mutable_btif() {
  _set_bit(2);
  if (btif_ == NULL) btif_ = new ::btPayload_BtifPayload;
  return btif_;
}

// optional .btPayload.BtePayload bte = 5;
inline bool btPayload::has_bte() const {
  return _has_bit(3);
}
inline void btPayload::clear_bte() {
  if (bte_ != NULL) bte_->::btPayload_BtePayload::Clear();
  _clear_bit(3);
}
inline const ::btPayload_BtePayload& btPayload::bte() const {
  return bte_ != NULL ? *bte_ : *default_instance_->bte_;
}
inline ::btPayload_BtePayload* btPayload::mutable_bte() {
  _set_bit(3);
  if (bte_ == NULL) bte_ = new ::btPayload_BtePayload;
  return bte_;
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {

template <>
inline const EnumDescriptor* GetEnumDescriptor< ::btPayload_BtifPayload_cmdTypeBtif>() {
  return ::btPayload_BtifPayload_cmdTypeBtif_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::btPayload_BtePayload_cmdTypeBte>() {
  return ::btPayload_BtePayload_cmdTypeBte_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_external_2faic_2fbtd_2fbt_2eproto__INCLUDED
